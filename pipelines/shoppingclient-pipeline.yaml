# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
    branches:
      include:
      - main
    paths:
      include:
      - Shopping/Shopping.Client/*
      - aks/shoppingclient.yaml

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'azure_regystry'#'e2bd5050-0b04-449c-8cd9-9367bbf7b47e'
  imageRepository: 'shoppingclient'
  containerRegistry: 'shoppingacr2023.azurecr.io'
  dockerfilePath: 'Shopping/Shopping.Client/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'shoppingacr20662ab5-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      condition: false
      inputs:
        targetType: 'inline'
        script: 'dir'
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: Docker@2
      condition: true
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'azure_regystry'
        repository: 'shoppingacr2023.azurecr.io'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '.'
        tags: '$(tag)'
    - task: PublishBuildArtifacts@1
      condition: false
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'aks'
        publishLocation: 'Container'

    - upload: aks
      artifact: aks

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'aspnetrunrundevops'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'aks'
              targetPath: '$(Pipeline.Workspace)'
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'MyALScluster'
              secretType: 'dockerRegistry'
              secretName: '$(imagePullSecret)'
              dockerRegistryEndpoint: 'azure_regystry'
              
          - task: Bash@3
            condition: false
            inputs:
              targetType: 'inline'
              script: 'ls -alR'
              workingDirectory: '$(Pipeline.Workspace)'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            condition: true
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'MyALScluster'
              manifests: '$(Pipeline.Workspace)/shoppingclient.yaml'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: '$(imagePullSecret)'